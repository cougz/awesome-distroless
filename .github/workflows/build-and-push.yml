name: Build and Push Distroless Images

on:
  push:
    branches: [ main ]
    paths:
      - 'base/**'
      - 'postgres/**'
      - 'nginx/**'
      - 'redis/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'base/**'
      - 'postgres/**'
      - 'nginx/**'
      - 'redis/**'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all images'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Build base image (dependency for all others)
  build-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      base-digest: ${{ steps.build.outputs.digest }}
      base-metadata: ${{ steps.meta.outputs.json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/base
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=1.0.0
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push base image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./base
          file: ./base/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job 2: Build PostgreSQL image
  build-postgres:
    runs-on: ubuntu-latest
    needs: build-base
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/postgres
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=17.5
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push PostgreSQL image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./postgres/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_UID=1000
            APP_GID=1000
            TZ=UTC
            POSTGRES_USER=postgres
            POSTGRES_PASSWORD=postgres
            POSTGRES_DB=postgres

  # Job 3: Build Nginx image
  build-nginx:
    runs-on: ubuntu-latest
    needs: build-base
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nginx
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=1.29.1
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Nginx image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./nginx/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_UID=1000
            APP_GID=1000
            TZ=UTC

  # Job 4: Build Redis image
  build-redis:
    runs-on: ubuntu-latest
    needs: build-base
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/redis
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=7.4.2
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Redis image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./redis/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_UID=1000
            APP_GID=1000
            TZ=UTC

  # Job 5: Summary and cleanup
  build-summary:
    runs-on: ubuntu-latest
    needs: [build-base, build-postgres, build-nginx, build-redis]
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## 🐳 Distroless Image Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Service | Status | Registry |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| Base | ${{ needs.build-base.result }} | \`ghcr.io/${{ github.repository }}/base:1.0.0\` |" >> $GITHUB_STEP_SUMMARY
          echo "| PostgreSQL | ${{ needs.build-postgres.result }} | \`ghcr.io/${{ github.repository }}/postgres:17.5\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Nginx | ${{ needs.build-nginx.result }} | \`ghcr.io/${{ github.repository }}/nginx:1.29.1\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Redis | ${{ needs.build-redis.result }} | \`ghcr.io/${{ github.repository }}/redis:7.4.2\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Usage" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull and run images" >> $GITHUB_STEP_SUMMARY
          echo "docker compose --profile image up" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Or pull individual images" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository }}/postgres:17.5" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository }}/nginx:1.29.1" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository }}/redis:7.4.2" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY